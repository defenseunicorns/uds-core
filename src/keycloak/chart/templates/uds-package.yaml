# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: keycloak
  namespace: {{ .Release.Namespace }}
spec:
  monitor:
    - selector:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/component: http
      podSelector:
        app.kubernetes.io/name: keycloak
      targetPort: 9000
      portName: http-metrics
      description: Metrics

  network:
    allow:
      - description: "UDS Operator"
        direction: Ingress
        selector:
          app.kubernetes.io/name: keycloak
        remoteNamespace: pepr-system
        remoteSelector:
          app: pepr-uds-core-watcher
        port: 8080

      - description: "Keycloak backchannel access"
        direction: Ingress
        selector:
          app.kubernetes.io/name: keycloak
        # Allow access from anything in cluster using an empty namespace selector
        remoteNamespace: "*"
        port: 8080

      # Keycloak OCSP to check certs cannot guarantee a static IP
      - description: "OCSP Lookup"
        direction: Egress
        selector:
          app.kubernetes.io/name: keycloak
        ports:
          - 443
          - 80
        remoteGenerated: Anywhere

      {{- if .Values.smtp.enabled }}
      - description: "SMTP access"
        direction: Egress
        selector:
          app.kubernetes.io/name: keycloak
        port: {{ .Values.smtp.port }}
        remoteGenerated: Anywhere
      {{- end }}

      {{- if eq (include "keycloak.postgresql.config" .) "true" }}
      - description: "PostgreSQL Database access"
        direction: Egress
        selector:
          app.kubernetes.io/name: keycloak
        port: {{ .Values.postgresql.port }}
        {{- if .Values.postgresql.internal.enabled }}
        remoteSelector:
          {{- .Values.postgresql.internal.remoteSelector | toYaml | nindent 10 }}
        remoteNamespace: {{ .Values.postgresql.internal.remoteNamespace }}
        {{- else if .Values.postgresql.egressCidr }}
        remoteCidr: {{ .Values.postgresql.egressCidr }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
      {{- end }}

      {{- if .Values.autoscaling.enabled }}
      # HA for keycloak
      - direction: Ingress
        remoteGenerated: IntraNamespace
        ports:
          - 7800
          - 57800
      - direction: Egress
        remoteGenerated: IntraNamespace
        ports:
          - 7800
          - 57800
      {{- end }}

      # Custom rules for additional networking access
      {{- with .Values.additionalNetworkAllow }}
      {{ toYaml . | nindent 6 }}
      {{- end }}

    expose:
      - description: "remove private paths from public gateway"
        host: sso
        service: keycloak-http
        selector:
          app.kubernetes.io/name: keycloak
        port: 8080
        advancedHTTP:
          match:
            - name: redirect-welcome
              uri:
                exact: /
            - name: redirect-admin
              uri:
                prefix: /admin
            - name: redirect-master-realm
              uri:
                prefix: /realms/master
            - name: redirect-metrics
              uri:
                prefix: /metrics
          redirect:
            uri: "/realms/{{ .Values.realm }}/account"
          headers:
            request:
              remove:
                - istio-mtls-client-certificate
              add:
                istio-mtls-client-certificate: "%DOWNSTREAM_PEER_CERT%"

      - description: "public auth access with optional client certificate"
        service: keycloak-http
        selector:
          app.kubernetes.io/name: keycloak
        host: sso
        port: 8080
        advancedHTTP:
          headers:
            request:
              remove:
                - istio-mtls-client-certificate
              add:
                istio-mtls-client-certificate: "%DOWNSTREAM_PEER_CERT%"

      - description: "admin access with optional client certificate"
        service: keycloak-http
        selector:
          app.kubernetes.io/name: keycloak
        gateway: admin
        host: keycloak
        port: 8080
        advancedHTTP:
          headers:
            request:
              remove:
                - istio-mtls-client-certificate
              add:
                istio-mtls-client-certificate: "%DOWNSTREAM_PEER_CERT%"
