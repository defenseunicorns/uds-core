# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

kind: ZarfPackageConfig
metadata:
  name: uds-core-keycloak-common
  description: "UDS Keycloak Common"
  url: https://github.com/keycloak/keycloak

components:
  - name: keycloak
    charts:
      - name: keycloak
        namespace: keycloak
        # renovate: datasource=docker depName=quay.io/keycloak/keycloak versioning=semver
        version: 26.4.0
        localPath: ../chart
        valuesFiles:
          - ../chart/values.yaml
    actions:
      onDeploy:
        before:
          - description: Re-create Keycloak StatefulSet
            # This can be switched to true in subsequent UDS Core versions
            mute: false
            cmd: |
              set +e

              echo "Checking if Keycloak StatefulSet should be deleted"
              KEYCLOAK_INSTALLED=$(./zarf tools kubectl get sts -n keycloak keycloak > /dev/null 2>&1; echo $?)
              if [ "${KEYCLOAK_INSTALLED}" -eq 0 ]; then
                echo "Keycloak has been previously installed. Checking the podManagementPolicy..."
                POD_MGMT_POLICY=$(./zarf tools kubectl get sts -n keycloak keycloak -o jsonpath='{.spec.podManagementPolicy}' 2>/dev/null || true)
                echo "Detected podManagementPolicy: ${POD_MGMT_POLICY:-<none>}"
                if [ -n "${POD_MGMT_POLICY}" ] && [ "${POD_MGMT_POLICY}" != "OrderedReady" ]; then
                  echo "podManagementPolicy is '${POD_MGMT_POLICY}', deleting StatefulSet (cascade=orphan) to allow re-create with OrderedReady"
                 ./zarf tools kubectl delete sts -n keycloak keycloak --cascade=orphan
                else
                  echo "podManagementPolicy is correct. Skipping..."
                fi
              else
                echo "Keycloak has not been installed. Skipping..."
              fi
        after:
          - description: Validate Keycloak Pods
            wait:
              cluster:
                kind: Pod
                name: app.kubernetes.io/name=keycloak
                condition: Ready
                namespace: keycloak
