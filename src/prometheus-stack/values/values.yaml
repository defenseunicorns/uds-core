alertmanager:
  alertmanagerSpec:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
crds:
  enabled: false
grafana:
  enabled: false
kube-state-metrics:
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 128Mi
kubeStateMetrics:
  serviceMonitor:
    interval: ""
    selfMonitor:
      enabled: false
nameOverride: kube-prometheus-stack
nodeExporter:
  jobLabel: jobLabel
  operatingSystems:
    darwin:
      enabled: false
    linux:
      enabled: false
  serviceMonitor:
    interval: ""
prometheus:
  prometheusSpec:
    enableFeatures:
      - remote-write-receiver
    podMetadata:
      annotations:
        proxy.istio.io/config: |
          proxyMetadata:
            OUTPUT_CERTS: /etc/istio-output-certs
        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]'
        traffic.sidecar.istio.io/includeOutboundIPRanges: ""
      labels:
        app: prometheus
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    resources:
      limits:
        cpu: 300m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 2Gi
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
          storageClassName: null
    volumeMounts:
      - mountPath: /etc/prom-certs/
        name: istio-certs
    volumes:
      - emptyDir:
          medium: Memory
        name: istio-certs
prometheus-node-exporter:
  containerSecurityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  hostNetwork: false
  hostPID: false
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  prometheus:
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  serviceAccount:
    name: null
  serviceMonitor:
    attachMetadata: {}
prometheusOperator:
  admissionWebhooks:
    containerSecurityContext:
      capabilities:
        drop:
          - ALL
    patch:
      containerSecurityContext:
        capabilities:
          drop:
            - ALL
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 128Mi

  prometheusConfigReloader:
    enableProbe:
      false
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 128Mi
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 512Mi
