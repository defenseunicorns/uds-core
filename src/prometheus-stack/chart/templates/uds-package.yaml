# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: prometheus-stack
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso.enabled }}
  sso:
    - name: uds-prometheus
      clientId: uds-prometheus
      redirectUris:
        - "https://prom.admin.{{ .Values.domain }}/auth"
      enableAuthserviceSelector:
        app.kubernetes.io/name: prometheus
      groups:
        anyOf:
          - /UDS Core/Admin
          - /UDS Core/Auditor
    - name: uds-alertmanager
      clientId: uds-alertmanager
      redirectUris:
        - "https://alerts.admin.{{ .Values.domain }}/auth"
      enableAuthserviceSelector:
        app.kubernetes.io/name: alertmanager
      groups:
        anyOf:
          - /UDS Core/Admin
          - /UDS Core/Auditor
  {{- end }}
  network:
    expose:
      - service: alertmanager-operated
        selector:
          app.kubernetes.io/name: alertmanager
        host: alerts
        gateway: admin
        port: 9093
      - service: prometheus-operated
        selector:
          app: prometheus
        host: prom
        gateway: admin
        port: 9090
    allow:
      # Permit intra-namespace communication
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        remoteGenerated: KubeAPI
        selector:
          app: kube-prometheus-stack-operator

      - direction: Egress
        remoteGenerated: KubeAPI
        selector:
          app: prometheus

      - direction: Egress
        remoteGenerated: KubeAPI
        selector:
          app.kubernetes.io/name: kube-state-metrics

      - direction: Egress
        remoteGenerated: KubeAPI
        selector:
          app: kube-prometheus-stack-admission-create

      - direction: Egress
        remoteGenerated: KubeAPI
        selector:
          app: kube-prometheus-stack-admission-patch

      - direction: Ingress
        # todo: evaluate a "KubeAPI" _ingress_ generated rule for webhook calls
        remoteGenerated: Anywhere
        selector:
          app: kube-prometheus-stack-operator
        port: 10250
        description: "Webhook"

      # Prometheus scrape targets
      - direction: Egress
        remoteNamespace: "" # todo: restrict this overly permissive netpol
        selector:
          app.kubernetes.io/name: prometheus
        description: "Metrics Scraping"

      - direction: Ingress
        remoteNamespace: grafana
        remoteSelector:
          app.kubernetes.io/name: grafana
        selector:
          app.kubernetes.io/name: prometheus
        port: 9090
        description: "Grafana Metrics Queries"

      # Custom rules for unanticipated scenarios
      {{- range .Values.custom }}
      - direction: {{ .direction }}
        selector:
          {{ .selector | toYaml | nindent 10 }}
        {{- if not .remoteGenerated }}
        remoteNamespace: {{ .remoteNamespace }}
        remoteSelector:
          {{ .remoteSelector | toYaml | nindent 10 }}
        port: {{ .port }}
        {{- else }}
        remoteGenerated: {{ .remoteGenerated }}
        {{- end }}
        description: {{ .description }}
      {{- end }}
