# Copyright 2025 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

profile: ambient

meshConfig:
  accessLogFile: /dev/stdout
  pathNormalization:
    normalization: MERGE_SLASHES
  defaultConfig:
    holdApplicationUntilProxyStarts: true
    gatewayTopology:
      forwardClientCertDetails: SANITIZE
  extensionProviders:
    - name: "authservice"
      envoyExtAuthzGrpc:
        service: "authservice.authservice.svc.cluster.local"
        port: "10003"
  outboundTrafficPolicy:
    mode: "ALLOW_ANY"

pilot:
  env:
    PILOT_JWT_ENABLE_REMOTE_JWKS: istiod
    ENABLE_NATIVE_SIDECARS: true

# Volume and mounts to add the SSO CA cert for JWKS fetching
# This volume/path mirrors the upstream behavior of `jwksResolverExtraRootCA` - while allowing us to reuse the existing base64 encoded CA cert from the ClusterConfig
# Upstream References:
# https://github.com/istio/istio/blob/2d5fc65b386ac3c3eff28aee4040dce37923b9b7/manifests/charts/istio-control/istio-discovery/templates/deployment.yaml#L250-L253
# https://github.com/istio/istio/blob/2d5fc65b386ac3c3eff28aee4040dce37923b9b7/manifests/charts/istio-control/istio-discovery/templates/deployment.yaml#L304-L308
# https://github.com/istio/istio/blob/2d5fc65b386ac3c3eff28aee4040dce37923b9b7/manifests/charts/istio-control/istio-discovery/templates/configmap-jwks.yaml
volumes:
  - name: sso-ca
    secret:
      secretName: sso-ca-cert
volumeMounts:
  - name: sso-ca
    mountPath: /cacerts

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - istiod
          topologyKey: kubernetes.io/hostname
