# Copyright 2025 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json

suite: NeuVector SSO Groups Configuration
set:
  domain: "example.com"
  adminDomain: "admin.example.com"
  sso:
    adminGroups:
      - "/UDS Core/Admin"
      - "/Custom Group/Administrators"
    readerGroups:
      - "/UDS Core/Auditor"
      - "/Custom Group/Viewers"
templates:
  - uds-package.yaml
tests:
  - it: should correctly map admin groups to admin role and reader groups to reader role
    template: uds-package.yaml
    asserts:
      - isKind:
          of: Package
      - equal:
          path: spec.sso[0].secretTemplate["oidcinitcfg.yaml"]
          value: |-
            always_reload: true
            client_id: clientField(clientId)
            client_secret: clientField(secret)
            enable: true
            group_claim: groups
            issuer: https://sso.example.com/realms/uds
            group_mapped_roles:
              - group: /UDS Core/Admin
                global_role: admin
              - group: /Custom Group/Administrators
                global_role: admin
              - group: /UDS Core/Auditor
                global_role: reader
              - group: /Custom Group/Viewers
                global_role: reader

  - it: should include all admin and reader groups in the groups.anyOf list
    template: uds-package.yaml
    asserts:
      - isKind:
          of: Package
      - contains:
          path: spec.sso[0].groups.anyOf
          content: "/UDS Core/Admin"
      - contains:
          path: spec.sso[0].groups.anyOf
          content: "/Custom Group/Administrators"
      - contains:
          path: spec.sso[0].groups.anyOf
          content: "/UDS Core/Auditor"
      - contains:
          path: spec.sso[0].groups.anyOf
          content: "/Custom Group/Viewers"
