/**
 * Copyright 2025 Defense Unicorns
 * SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial
 */

// This file is auto-generated by kubernetes-fluent-client, do not edit manually
import { GenericKind, RegisterKind } from "kubernetes-fluent-client";
export class ClusterConfig extends GenericKind {
  declare metadata?: Metadata;
  spec?: Spec;
}

export interface Metadata {
  name?: Name;
}

export enum Name {
  UdsClusterConfig = "uds-cluster-config",
}

export interface Spec {
  attributes?: Attributes;
  expose: Expose;
  networking?: Networking;
  policy: Policy;
}

export interface Attributes {
  /**
   * Friendly name to associate with your UDS cluster
   */
  clusterName?: string;
  /**
   * Tags to apply to your UDS cluster
   */
  tags?: string[];
}

export interface Expose {
  /**
   * Domain all cluster services on the admin gateway will be exposed on
   */
  adminDomain?: string;
  /**
   * The trusted CA that signed your domain certificates if using Private PKI
   */
  caCert?: string;
  /**
   * Domain all cluster services will be exposed on
   */
  domain: string;
}

export interface Networking {
  /**
   * CIDR range for your Kubernetes control plane nodes. This is a manual override that can be
   * used instead of relying on Pepr to automatically watch and update the values
   */
  kubeApiCIDR?: string;
  /**
   * CIDR(s) for all Kubernetes nodes (not just control plane). Similar reason to above,annual
   * override instead of relying on watch
   */
  kubeNodeCIDRs?: string[];
}

export interface Policy {
  /**
   * Allow UDS Exemption custom resources to live in any namespace (default false)
   */
  allowAllNsExemptions: boolean;
}

RegisterKind(ClusterConfig, {
  group: "uds.dev",
  version: "v1alpha1",
  kind: "ClusterConfig",
  plural: "clusterconfig",
});
