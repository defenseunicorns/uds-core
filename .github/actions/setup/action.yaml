# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

# action.yml
name: "Setup Environment"
description: "UDS Environment Setup"
inputs:
  ghToken:
    description: 'GITHUB_TOKEN'
    required: true
  registry1Username:
    description: 'IRON_BANK_ROBOT_USERNAME'
    required: true
  registry1Password:
    description: 'IRON_BANK_ROBOT_PASSWORD'
    required: true
  chainguardIdentity:
    description: "ID for Chainguard Identity"
    required: true

runs:
  using: "composite"
  steps:
    - name: Use Node.js latest
      uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
      with:
        node-version: 20

    - name: Install k3d
      shell: bash
      # renovate: datasource=github-tags depName=k3d-io/k3d versioning=semver
      run: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=v5.7.5 bash

    - name: Install UDS CLI
      uses: defenseunicorns/setup-uds@b987a32bac3baeb67bfb08f5e1544e2f9076ee8a # v1.0.0
      with:
        # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
        version: v0.19.2

    - name: Install Lula
      uses: defenseunicorns/lula-action/setup@badad8c4b1570095f57e66ffd62664847698a3b9 # v0.0.1
      with:
        # renovate: datasource=github-tags depName=defenseunicorns/lula versioning=semver-coerced
        version: v0.13.0

    - name: Iron Bank Login
      if: ${{ inputs.registry1Username != '' }}
      env:
        REGISTRY_USERNAME: ${{ inputs.registry1Username }}
        REGISTRY_PASSWORD: ${{ inputs.registry1Password }}
      run: echo "${{ env.REGISTRY_PASSWORD }}" | uds zarf tools registry login -u "${{ env.REGISTRY_USERNAME }}" --password-stdin registry1.dso.mil
      shell: bash

    - name: Chainguard Login
      if: ${{ inputs.chainguardIdentity != '' }}
      uses: chainguard-dev/setup-chainctl@8d93dcbef466d3cf3533f67084f52eb74ef9d262 # v0.2.4
      with:
        identity: ${{ inputs.chainguardIdentity }}

    - name: GHCR Login
      if: ${{ inputs.ghToken != '' }}
      env:
        GH_TOKEN: ${{ inputs.ghToken }}
      run: echo "${{ env.GH_TOKEN }}" | uds zarf tools registry login -u "dummy" --password-stdin ghcr.io
      shell: bash
