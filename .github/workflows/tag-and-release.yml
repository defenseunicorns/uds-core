name: Publish UDS Core

on:
  push:
    branches:
      - main

jobs:
  tag-new-version:
    name: Tag New Version
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-flag.outputs.release_created }}
    steps:
      - name: Create release tag
        id: tag
        uses: google-github-actions/release-please-action@cc61a07e2da466bebbc19b3a7dd01d6aecb20d1e # v4
        with:
          command: manifest # use configs in release-please-config.json
      - id: release-flag
        run: echo "release_created=${{ steps.tag.outputs.release_created || false }}" >> $GITHUB_OUTPUT

  publish-uds-core:
    strategy:
      matrix:
        flavor: [upstream, registry1]
        type: [standard-package, istio-package]
        arch: [arm64, amd64]
    needs: tag-new-version
    if: ${{ needs.tag-new-version.outputs.release_created == 'true'}}
    runs-on: "uds-ubuntu-big-boy-8-core"
    name: Publish packages

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Environment setup
        uses: ./.github/actions/setup

      - name: Login to GHCR
        run: uds run registry-login --set REGISTRY=ghcr.io --set REGISTRY_USERNAME=dummy --set REGISTRY_PASSWORD=${{ secrets.GITHUB_TOKEN }} --set REGISTRY_RETRY_INTERVAL=90

      - name: Login to registry1
        run: uds run registry-login --set REGISTRY=registry1.dso.mil --set REGISTRY_USERNAME=${{ secrets.IRON_BANK_ROBOT_USERNAME }} --set REGISTRY_PASSWORD=${{ secrets.IRON_BANK_ROBOT_PASSWORD }} --set REGISTRY_RETRY_INTERVAL=90

      - name: Create Standard Package and Bundle
        if: ${{ matrix.type == 'standard-package' }}
        run: |
          set -e
          ZARF_ARCHITECTURE=${{ matrix.arch }} uds run -f tasks/create.yaml standard-package --no-progress --set FLAVOR=${FLAVOR}
          ZARF_ARCHITECTURE=${{ matrix.arch }} uds run -f tasks/create.yaml k3d-standard-bundle --no-progress

      - name: Create Istio Package and Bundle
        if: ${{ matrix.type == 'istio-package'}}
        run: |
          ZARF_ARCHITECTURE=${{ matrix.arch }} uds run -f tasks/create.yaml istio-package --no-progress --set FLAVOR=${FLAVOR}
          ZARF_ARCHITECTURE=${{ matrix.arch }} uds run -f tasks/create.yaml k3d-istio-bundle --no-progress

      - name: Deploy Standard Package via Bundle
        if: ${{ matrix.type == 'standard-package' && matrix.arch == 'amd64' }}
        run: uds run -f tasks/deploy.yaml k3d-standard-bundle --no-pogress --set uds_arch=${{ matrix.arch }}

      - name: Deploy Istio Packages via Bundle
        if: ${{ matrix.type == 'istio-package' && matrix.arch == 'amd64' }}
        run: uds run -f tasks/deploy.yaml k3d-istio-bundle --no-pogress --set uds_arch=${{ matrix.arch }}

      - name: Publish UDS Zarf Package
        if: ${{ matrix.type == 'standard-package' }}
        run: uds run -f tasks/publish.yaml standard-package --set FLAVOR=${{ matrix.flavor }} --set uds_arch=${{ matrix.arch }}

      - name: Publish UDS Standard Bundles
        if: ${{ matrix.flavor != 'registry1' && matrix.type == 'standard-package' }}
        run: uds run -f tasks/publish.yaml standard-bundle --set uds_arch=${{ matrix.arch }}

      - name: Publish UDS Istio Bundles
        if: ${{ matrix.flavor != 'registry1' && matrix.type == 'istio-package' }}
        run: uds run -f tasks/publish.yaml istio-bundle --set uds_arch=${{ matrix.arch }}

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: -${{ matrix.flavor }}
