name: Test packages

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      package:
        type: string
        description: "The name of the source package to test"
        required: true
      flavor:
        type: string
        description: "Flavor of the source package to test"
        required: true
      test_type:
        type: string
        description: "The type of test to perform"
        required: true
    # Triggered by pull-request-conditionals.yaml
  workflow_call:
    inputs:
      package:
        type: string
        description: "The name of the source package to test"
        required: true
      flavor:
        type: string
        description: "Flavor of the source package to test"
        required: true
      test_type:
        type: string
        description: "The type of test to perform"
        required: true

permissions:
  contents: read

jobs:
  test:
    runs-on: "${{ inputs.package == 'all' && 'uds-ubuntu-big-boy-8-core' || 'ubuntu-latest'}}"
    timeout-minutes: 30
    name: Test
    env:
      UDS_PKG: ${{ inputs.package }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Environment setup
        uses: ./.github/actions/setup
        with:
          registry1Username: ${{ secrets.IRON_BANK_ROBOT_USERNAME }}
          registry1Password: ${{ secrets.IRON_BANK_ROBOT_PASSWORD }}
          ghToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Test a single source package
        if: ${{ inputs.package != 'all' && inputs.test_type == 'install' }}
        run: uds run test-single-package --set FLAVOR=${{ inputs.flavor }} --no-progress

      - name: Test UDS Core Install
        if: ${{ inputs.package == 'all' && inputs.test_type == 'install' }}
        run: uds run test-uds-core --set FLAVOR=${{ inputs.flavor }} --no-progress

      - name: Validate UDS Core Compliance
        if: ${{ inputs.package == 'all' && inputs.test_type == 'install' }}
        run: uds run test-compliance-validate --no-progress

      - name: Evaluate UDS Core Compliance
        id: compliance-evaluation
        if: ${{ inputs.package == 'all' && inputs.test_type == 'install' }}
        run: uds run test-compliance-evaluate --no-progress
        continue-on-error: true

      # steps in this action only run when there has been a previous failure - will indicate success thereafter
      # need to think about how much noise this could create - noise currently = good
      - name: Notify Lula Team of Compliance Assessment Results
        if: ${{ always() }}
        uses: ./.github/actions/notify-lula
        with:
          state: ${{ steps.compliance-evaluation.conclusion }}
          flavor: ${{ inputs.flavor }}

      - name: Store UDS Core Compliance Assessment Results
        if: ${{ inputs.package == 'all' && inputs.test_type == 'install' }}
        run: cp ./compliance/oscal-assessment-results.yaml /tmp/oscal-assessment-results.yaml

      - name: Test UDS Core Upgrade
        if: ${{ inputs.package == 'all' && inputs.test_type == 'upgrade' }}
        run: uds run test-uds-core-upgrade --set FLAVOR=${{ inputs.flavor }} --no-progress

      - name: Debug Output
        if: ${{ always() }}
        uses: ./.github/actions/debug-output

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: -${{ inputs.test_type }}-${{ inputs.package }}-${{ inputs.flavor }}
