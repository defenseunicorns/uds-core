name: Test packages

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      package:
        type: string
        description: "The name of the source package to test"
        required: true
      flavor:
        type: string
        description: "Flavor of the source package to test"
        required: true
      test_type:
        type: string
        description: "The type of test to perform"
        required: true
    # Triggered by pull-request-conditionals.yaml
  workflow_call:
    inputs:
      package:
        type: string
        description: "The name of the source package to test"
        required: true
      flavor:
        type: string
        description: "Flavor of the source package to test"
        required: true
      test_type:
        type: string
        description: "The type of test to perform"
        required: true

permissions:
  contents: read

jobs:
  test:
    runs-on: "${{ inputs.package == 'all' && 'uds-ubuntu-big-boy-8-core' || 'ubuntu-latest'}}"
    timeout-minutes: 30
    name: Test
    env:
      UDS_PKG: ${{ inputs.package }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Environment setup
        uses: ./.github/actions/setup

      - name: Login to GHCR
        run: uds run -f tasks/setup.yaml registry-login --with registry=ghcr.io --with registry-username=dummy --with registry-password=${{ secrets.GITHUB_TOKEN }} --with registry-retry-interval=5

      - name: Login to registry1
        run: uds run -f tasks/setup.yaml registry-login --with registry=registry1.dso.mil --with registry-username=${{ secrets.IRON_BANK_ROBOT_USERNAME }} --with registry-password=${{ secrets.IRON_BANK_ROBOT_PASSWORD }} --with registry-retry-interval=5

      - name: Test a single source package
        if: ${{ inputs.package != 'all' && inputs.test_type == 'install' }}
        run: uds run test-single-package --set FLAVOR=${{ inputs.flavor }}

      - name: Test UDS Core Install
        if: ${{ inputs.package == 'all' && inputs.test_type == 'install' }}
        run: uds run test-uds-core --set FLAVOR=${{ inputs.flavor }}

      - name: Test UDS Core Upgrade
        if: ${{ inputs.package == 'all' && inputs.test_type == 'upgrade' }}
        run: uds run test-uds-core-upgrade --set FLAVOR=${{ inputs.flavor }}

      - name: Debug Output
        if: ${{ always() }}
        run: |
          echo "::group::kubectl get all"
          kubectl get all -A
          echo "::endgroup::"

          echo "::group::kubectl get pv,pvc"
          kubectl get pv,pvc -A
          echo "::endgroup::"

          echo "::group::kubectl get package"
          kubectl get package -A
          echo "::endgroup::"

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs
        with:
          suffix: -${{ inputs.test_type }}-${{ inputs.package }}-${{ inputs.flavor }}
