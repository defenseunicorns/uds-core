name: Test individual capabilities

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      capability:
        type: string
        description: "The name of the capability to test"
        required: true
  # Triggered by pull-request-conditionals.yaml
  workflow_call:
    inputs:
      capability:
        type: string
        description: "The name of the capability to test"
        required: true

# Abort prior jobs in the same workflow / PR
concurrency:
  group: test-${{ github.ref }}-${{ inputs.capability }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  capability-test:
    runs-on: ubuntu-latest
    name: Test Capability
    if: ${{ inputs.capability != 'all' }}
    env:
      CAPABILITY: ${{ inputs.capability }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Environment setup
        uses: ./.github/actions/setup

      - name: Create capability package
        run: CAPABILITY=${{ inputs.capability }} uds run -f tasks/create.yaml single-capability

      - name: Init cluster
        run: uds run -f tasks/setup.yaml k3d-test-cluster

      - name: Deploy capability
        run: uds run -f tasks/deploy.yaml single-capability

      - name: Validate capability
        run: uds run -f capabilities/${{ inputs.capability }}/validate.yaml run

  package-test:
    runs-on: uds-ubuntu-big-boy-4-core
    name: Test UDS Core
    if: ${{ inputs.capability == 'all' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Environment Setup
        uses: ./.github/actions/setup

      - name: Create all package & bundles
        run: |
          uds run -f tasks/create.yaml standard-package
          uds run -f tasks/create.yaml example-bundle-k3d-standard

      - name: Deploy the example bundle
        run: uds run -f tasks/deploy.yaml example-bundle-k3d-standard
