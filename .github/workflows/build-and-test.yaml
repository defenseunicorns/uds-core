name: Build and Test uds core Capabilities on k3d


on:
  workflow_dispatch:
    inputs:
      capability:
        type: string
        default: ""
      bundle:
        type: string
        default: ""
      platform:
        type: string
        default: 'ubuntu-latest'
  workflow_call:
    inputs:
      capability:
        type: string
        default: ""
      bundle:
        type: string
        default: ""
      platform:
        type: string
        default: 'ubuntu-latest'

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    outputs:
      bundle-path: ${{ steps.bundle-default.outputs.path }}
      capability-path: ${{ steps.capability-default.outputs.path }}
    runs-on: ubuntu-latest
    steps:
      - name: Set Bundle Path
        id: bundle-default
        run: |
          PATH="."
          [ ${{ inputs.bundle }} != 'uds-core' ] && PATH="${{ inputs.bundle }}"
          echo "path=$PATH" >> $GITHUB_OUTPUT   
        if: ${{ inputs.bundle }} != ''
      - name: Set Capability Path
        id: capability-default
        run: |
          echo "path=capabilities/${{ inputs.capability }}" >> $GITHUB_OUTPUT   
        if: ${{ inputs.capability }} != ''

  build-and-test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # - name: Login to Registry1
      #   uses: docker/login-action@v3
      #   with:
      #     registry: registry1.dso.mil
      #     username: ${{ secrets.REGISTRY1_USERNAME }}
      #     password: ${{ secrets.REGISTRY1_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: dummy
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Zarf
        uses: defenseunicorns/setup-zarf@main
        with:
          # renovate: datasource=github-tags depName=defenseunicorns/zarf versioning=semver
          version: v0.31.0
          download-init-package: true

      - name: Use Node.js latest
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          node-version: latest        

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=v5.6.0 bash

      - name: Build Capability
        shell: bash
        run: zarf package create --confirm
        working-directory: "${{ needs.setup.outputs.capability-path }}/.github/zarf-runner/bob-the-builder"
        if: ${{ inputs.capability }} != ''

      - name: Deploy Capability
        shell: bash
        run: zarf package create --confirm
        working-directory: "${{ needs.setup.outputs.capability-path }}/.github/zarf-runner/deploy"
        if: ${{ inputs.capability }} != ''
        env:
          TENANT_GATEWAY_TLS_CERT: ${{ secrets.TENANT_GATEWAY_TLS_CERT }}
          TENANT_GATEWAY_TLS_KEY: ${{ secrets.TENANT_GATEWAY_TLS_KEY}}
          ADMIN_GATEWAY_TLS_CERT: ${{ secrets.ADMIN_GATEWAY_TLS_CERT }}
          ADMIN_GATEWAY_TLS_KEY: ${{ secrets.ADMIN_GATEWAY_TLS_KEY}}


      - name: Test Capability
        shell: bash
        run: zarf package create --confirm
        working-directory: "${{ needs.setup.outputs.capability-path }}/.github/zarf-runner/test"
        if: ${{ inputs.capability }} != ''
        
