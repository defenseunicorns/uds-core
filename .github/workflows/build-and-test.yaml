name: Test individual capabilities

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      capability:
        type: string
        description: "The name of the capability to test"
        required: true
  # Triggered by pull-request-conditionals.yaml
  workflow_call:
    inputs:
      capability:
        type: string
        description: "The name of the capability to test"
        required: true

# Abort prior jobs in the same workflow / PR
concurrency:
  group: test-capability-${{ github.ref }}-${{ github.event.inputs.capability }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install Zarf
        uses: defenseunicorns/setup-zarf@main
        with:
          # renovate: datasource=github-tags depName=defenseunicorns/zarf versioning=semver
          version: v0.31.0
          download-init-package: true

      - name: Use Node.js latest
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: latest

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=v5.6.0 bash

      - name: Install UDS CLI
        run: |
          $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
          brew update && brew install defenseunicorns/tap/uds

      - name: Build Capability
        shell: bash
        run: |
          pwd
          CAPABILITY=${{ github.event.inputs.capability }} uds run -f tasks/create.yaml single-capability
          ll -h

      # - name: Deploy Capability
      #   shell: bash
      #   run: zarf package create --confirm
      #   working-directory: "${{ needs.setup.outputs.capability-path }}/.github/zarf-runner/deploy"
      #   if: ${{ inputs.capability }} != ''
      #   env:
      #     TENANT_GATEWAY_TLS_CERT: ${{ secrets.TENANT_GATEWAY_TLS_CERT }}
      #     TENANT_GATEWAY_TLS_KEY: ${{ secrets.TENANT_GATEWAY_TLS_KEY}}
      #     ADMIN_GATEWAY_TLS_CERT: ${{ secrets.ADMIN_GATEWAY_TLS_CERT }}
      #     ADMIN_GATEWAY_TLS_KEY: ${{ secrets.ADMIN_GATEWAY_TLS_KEY}}

      # - name: Test Capability
      #   shell: bash
      #   run: zarf package create --confirm
      #   working-directory: "${{ needs.setup.outputs.capability-path }}/.github/zarf-runner/test"
      #   if: ${{ inputs.capability }} != ''
